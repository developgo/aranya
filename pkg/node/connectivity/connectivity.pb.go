// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connectivity.proto

package connectivity

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Ignoring public import of PodInfo from pod.proto

// Ignoring public import of PodIdentity from pod.proto

// Ignoring public import of PodCmd from pod.proto

// Ignoring public import of PodCreateOptions from pod.proto

// Ignoring public import of PodDeleteOptions from pod.proto

// Ignoring public import of PodListOptions from pod.proto

// Ignoring public import of PodLogOptions from pod.proto

// Ignoring public import of PodExecOptions from pod.proto

// Ignoring public import of PodPortForwardOptions from pod.proto

// Ignoring public import of PodDataOptions from pod.proto

// Ignoring public import of TtyResizeOptions from pod.proto

// Ignoring public import of PodData from pod.proto

// Ignoring public import of Action from pod.proto

// Ignoring public import of Kind from pod.proto

// Ignoring public import of NodeInfo from node.proto

// Ignoring public import of NodeCmd from node.proto

type Msg struct {
	SessionId uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Completed bool   `protobuf:"varint,2,opt,name=completed,proto3" json:"completed,omitempty"`
	// Types that are valid to be assigned to Msg:
	//	*Msg_NodeInfo
	//	*Msg_PodInfo
	//	*Msg_PodData
	Msg                  isMsg_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Msg) Reset()         { *m = Msg{} }
func (m *Msg) String() string { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()    {}
func (*Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_connectivity_b9fb4a5f7890f482, []int{0}
}
func (m *Msg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg.Unmarshal(m, b)
}
func (m *Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg.Marshal(b, m, deterministic)
}
func (dst *Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg.Merge(dst, src)
}
func (m *Msg) XXX_Size() int {
	return xxx_messageInfo_Msg.Size(m)
}
func (m *Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Msg proto.InternalMessageInfo

func (m *Msg) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *Msg) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

type isMsg_Msg interface {
	isMsg_Msg()
}

type Msg_NodeInfo struct {
	NodeInfo *NodeInfo `protobuf:"bytes,11,opt,name=node_info,json=nodeInfo,proto3,oneof"`
}

type Msg_PodInfo struct {
	PodInfo *PodInfo `protobuf:"bytes,12,opt,name=pod_info,json=podInfo,proto3,oneof"`
}

type Msg_PodData struct {
	PodData *PodData `protobuf:"bytes,13,opt,name=pod_data,json=podData,proto3,oneof"`
}

func (*Msg_NodeInfo) isMsg_Msg() {}

func (*Msg_PodInfo) isMsg_Msg() {}

func (*Msg_PodData) isMsg_Msg() {}

func (m *Msg) GetMsg() isMsg_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Msg) GetNodeInfo() *NodeInfo {
	if x, ok := m.GetMsg().(*Msg_NodeInfo); ok {
		return x.NodeInfo
	}
	return nil
}

func (m *Msg) GetPodInfo() *PodInfo {
	if x, ok := m.GetMsg().(*Msg_PodInfo); ok {
		return x.PodInfo
	}
	return nil
}

func (m *Msg) GetPodData() *PodData {
	if x, ok := m.GetMsg().(*Msg_PodData); ok {
		return x.PodData
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Msg) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Msg_OneofMarshaler, _Msg_OneofUnmarshaler, _Msg_OneofSizer, []interface{}{
		(*Msg_NodeInfo)(nil),
		(*Msg_PodInfo)(nil),
		(*Msg_PodData)(nil),
	}
}

func _Msg_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Msg)
	// msg
	switch x := m.Msg.(type) {
	case *Msg_NodeInfo:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NodeInfo); err != nil {
			return err
		}
	case *Msg_PodInfo:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PodInfo); err != nil {
			return err
		}
	case *Msg_PodData:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PodData); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Msg.Msg has unexpected type %T", x)
	}
	return nil
}

func _Msg_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Msg)
	switch tag {
	case 11: // msg.node_info
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NodeInfo)
		err := b.DecodeMessage(msg)
		m.Msg = &Msg_NodeInfo{msg}
		return true, err
	case 12: // msg.pod_info
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PodInfo)
		err := b.DecodeMessage(msg)
		m.Msg = &Msg_PodInfo{msg}
		return true, err
	case 13: // msg.pod_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PodData)
		err := b.DecodeMessage(msg)
		m.Msg = &Msg_PodData{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Msg_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Msg)
	// msg
	switch x := m.Msg.(type) {
	case *Msg_NodeInfo:
		s := proto.Size(x.NodeInfo)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Msg_PodInfo:
		s := proto.Size(x.PodInfo)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Msg_PodData:
		s := proto.Size(x.PodData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Cmd struct {
	SessionId uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are valid to be assigned to Cmd:
	//	*Cmd_NodeCmd
	//	*Cmd_PodCmd
	Cmd                  isCmd_Cmd `protobuf_oneof:"cmd"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Cmd) Reset()         { *m = Cmd{} }
func (m *Cmd) String() string { return proto.CompactTextString(m) }
func (*Cmd) ProtoMessage()    {}
func (*Cmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_connectivity_b9fb4a5f7890f482, []int{1}
}
func (m *Cmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cmd.Unmarshal(m, b)
}
func (m *Cmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cmd.Marshal(b, m, deterministic)
}
func (dst *Cmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cmd.Merge(dst, src)
}
func (m *Cmd) XXX_Size() int {
	return xxx_messageInfo_Cmd.Size(m)
}
func (m *Cmd) XXX_DiscardUnknown() {
	xxx_messageInfo_Cmd.DiscardUnknown(m)
}

var xxx_messageInfo_Cmd proto.InternalMessageInfo

func (m *Cmd) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type isCmd_Cmd interface {
	isCmd_Cmd()
}

type Cmd_NodeCmd struct {
	NodeCmd *NodeCmd `protobuf:"bytes,11,opt,name=node_cmd,json=nodeCmd,proto3,oneof"`
}

type Cmd_PodCmd struct {
	PodCmd *PodCmd `protobuf:"bytes,12,opt,name=pod_cmd,json=podCmd,proto3,oneof"`
}

func (*Cmd_NodeCmd) isCmd_Cmd() {}

func (*Cmd_PodCmd) isCmd_Cmd() {}

func (m *Cmd) GetCmd() isCmd_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *Cmd) GetNodeCmd() *NodeCmd {
	if x, ok := m.GetCmd().(*Cmd_NodeCmd); ok {
		return x.NodeCmd
	}
	return nil
}

func (m *Cmd) GetPodCmd() *PodCmd {
	if x, ok := m.GetCmd().(*Cmd_PodCmd); ok {
		return x.PodCmd
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Cmd) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Cmd_OneofMarshaler, _Cmd_OneofUnmarshaler, _Cmd_OneofSizer, []interface{}{
		(*Cmd_NodeCmd)(nil),
		(*Cmd_PodCmd)(nil),
	}
}

func _Cmd_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Cmd)
	// cmd
	switch x := m.Cmd.(type) {
	case *Cmd_NodeCmd:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NodeCmd); err != nil {
			return err
		}
	case *Cmd_PodCmd:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PodCmd); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Cmd.Cmd has unexpected type %T", x)
	}
	return nil
}

func _Cmd_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Cmd)
	switch tag {
	case 11: // cmd.node_cmd
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NodeCmd)
		err := b.DecodeMessage(msg)
		m.Cmd = &Cmd_NodeCmd{msg}
		return true, err
	case 12: // cmd.pod_cmd
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PodCmd)
		err := b.DecodeMessage(msg)
		m.Cmd = &Cmd_PodCmd{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Cmd_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Cmd)
	// cmd
	switch x := m.Cmd.(type) {
	case *Cmd_NodeCmd:
		s := proto.Size(x.NodeCmd)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Cmd_PodCmd:
		s := proto.Size(x.PodCmd)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Msg)(nil), "connectivity.Msg")
	proto.RegisterType((*Cmd)(nil), "connectivity.Cmd")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConnectivityClient is the client API for Connectivity service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnectivityClient interface {
	Sync(ctx context.Context, opts ...grpc.CallOption) (Connectivity_SyncClient, error)
}

type connectivityClient struct {
	cc *grpc.ClientConn
}

func NewConnectivityClient(cc *grpc.ClientConn) ConnectivityClient {
	return &connectivityClient{cc}
}

func (c *connectivityClient) Sync(ctx context.Context, opts ...grpc.CallOption) (Connectivity_SyncClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Connectivity_serviceDesc.Streams[0], "/connectivity.Connectivity/Sync", opts...)
	if err != nil {
		return nil, err
	}
	x := &connectivitySyncClient{stream}
	return x, nil
}

type Connectivity_SyncClient interface {
	Send(*Msg) error
	Recv() (*Cmd, error)
	grpc.ClientStream
}

type connectivitySyncClient struct {
	grpc.ClientStream
}

func (x *connectivitySyncClient) Send(m *Msg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *connectivitySyncClient) Recv() (*Cmd, error) {
	m := new(Cmd)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ConnectivityServer is the server API for Connectivity service.
type ConnectivityServer interface {
	Sync(Connectivity_SyncServer) error
}

func RegisterConnectivityServer(s *grpc.Server, srv ConnectivityServer) {
	s.RegisterService(&_Connectivity_serviceDesc, srv)
}

func _Connectivity_Sync_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ConnectivityServer).Sync(&connectivitySyncServer{stream})
}

type Connectivity_SyncServer interface {
	Send(*Cmd) error
	Recv() (*Msg, error)
	grpc.ServerStream
}

type connectivitySyncServer struct {
	grpc.ServerStream
}

func (x *connectivitySyncServer) Send(m *Cmd) error {
	return x.ServerStream.SendMsg(m)
}

func (x *connectivitySyncServer) Recv() (*Msg, error) {
	m := new(Msg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Connectivity_serviceDesc = grpc.ServiceDesc{
	ServiceName: "connectivity.Connectivity",
	HandlerType: (*ConnectivityServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Sync",
			Handler:       _Connectivity_Sync_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "connectivity.proto",
}

func init() { proto.RegisterFile("connectivity.proto", fileDescriptor_connectivity_b9fb4a5f7890f482) }

var fileDescriptor_connectivity_b9fb4a5f7890f482 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x14, 0x45, 0x3b, 0xb6, 0xd6, 0xe6, 0xb5, 0x2e, 0x1c, 0xac, 0x84, 0xa2, 0x50, 0xba, 0xca, 0xaa,
	0x96, 0x88, 0x7b, 0x31, 0x2e, 0xec, 0xa2, 0x12, 0xe2, 0x07, 0x84, 0x38, 0x6f, 0x1a, 0x02, 0xce,
	0xbc, 0xc1, 0x19, 0x84, 0xfe, 0x85, 0x9f, 0xe9, 0x67, 0x48, 0x32, 0x11, 0x1b, 0x8b, 0xb8, 0x3b,
	0xdc, 0xe4, 0xe4, 0xdd, 0x4b, 0x80, 0x0b, 0xd2, 0x5a, 0x0a, 0x57, 0xbd, 0x57, 0x6e, 0xb7, 0x34,
	0x6f, 0xe4, 0x88, 0x4f, 0xf6, 0xb3, 0x59, 0x60, 0x08, 0xfd, 0x83, 0x19, 0x68, 0x42, 0xe9, 0x79,
	0xf1, 0xc9, 0xa0, 0xbf, 0xb1, 0x25, 0xbf, 0x02, 0xb0, 0xd2, 0xda, 0x8a, 0x74, 0x5e, 0x61, 0xc8,
	0xe6, 0x2c, 0x1a, 0x64, 0x41, 0x9b, 0xac, 0x91, 0x5f, 0x42, 0x20, 0x48, 0x99, 0x57, 0xe9, 0x24,
	0x86, 0x47, 0x73, 0x16, 0x8d, 0xb2, 0x9f, 0x80, 0xdf, 0x42, 0x50, 0x7f, 0x32, 0xaf, 0xf4, 0x96,
	0xc2, 0xf1, 0x9c, 0x45, 0xe3, 0xf8, 0x62, 0xd9, 0x69, 0xf4, 0x44, 0x28, 0xd7, 0x7a, 0x4b, 0x8f,
	0xbd, 0x6c, 0xa4, 0x5b, 0xe6, 0x31, 0x8c, 0x0c, 0xa1, 0xb7, 0x26, 0x8d, 0x35, 0xed, 0x5a, 0x29,
	0x61, 0x2b, 0x9d, 0x18, 0x8f, 0xdf, 0x0e, 0x16, 0xae, 0x08, 0x4f, 0xff, 0x70, 0x1e, 0x0a, 0x57,
	0xb4, 0x4e, 0x8d, 0xf7, 0xc7, 0xd0, 0x57, 0xb6, 0x5c, 0x7c, 0x30, 0xe8, 0x27, 0x0a, 0xff, 0x9b,
	0x1a, 0x43, 0xd3, 0x30, 0x17, 0x0a, 0xdb, 0x2d, 0xd3, 0xc3, 0x2d, 0x89, 0xc2, 0xfa, 0x82, 0xf6,
	0xc8, 0xaf, 0xa1, 0x3e, 0xd6, 0x28, 0x7e, 0xc8, 0xf9, 0x41, 0x29, 0x6f, 0x0c, 0x4d, 0x43, 0x75,
	0x25, 0xa1, 0x30, 0xbe, 0x83, 0x49, 0xb2, 0xf7, 0x1e, 0x5f, 0xc1, 0xe0, 0x79, 0xa7, 0x05, 0x3f,
	0xeb, 0xea, 0x1b, 0x5b, 0xce, 0x7e, 0x45, 0x89, 0xc2, 0x88, 0xad, 0x58, 0xda, 0x4b, 0xd9, 0xcb,
	0xb0, 0xf9, 0x95, 0x37, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x38, 0x99, 0xc0, 0x13, 0x05, 0x02,
	0x00, 0x00,
}
