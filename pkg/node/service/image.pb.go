// Code generated by protoc-gen-go. DO NOT EDIT.
// source: image.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ImageStatus struct {
	// Types that are valid to be assigned to Status:
	//	*ImageStatus_Pulled
	//	*ImageStatus_Deleted
	//	*ImageStatus_Info
	Status               isImageStatus_Status `protobuf_oneof:"status"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ImageStatus) Reset()         { *m = ImageStatus{} }
func (m *ImageStatus) String() string { return proto.CompactTextString(m) }
func (*ImageStatus) ProtoMessage()    {}
func (*ImageStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_image_bab6e92a9322152a, []int{0}
}
func (m *ImageStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageStatus.Unmarshal(m, b)
}
func (m *ImageStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageStatus.Marshal(b, m, deterministic)
}
func (dst *ImageStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageStatus.Merge(dst, src)
}
func (m *ImageStatus) XXX_Size() int {
	return xxx_messageInfo_ImageStatus.Size(m)
}
func (m *ImageStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ImageStatus proto.InternalMessageInfo

type isImageStatus_Status interface {
	isImageStatus_Status()
}

type ImageStatus_Pulled struct {
	Pulled *ImagePulled `protobuf:"bytes,1,opt,name=pulled,proto3,oneof"`
}

type ImageStatus_Deleted struct {
	Deleted *ImageDeleted `protobuf:"bytes,2,opt,name=deleted,proto3,oneof"`
}

type ImageStatus_Info struct {
	Info *ImageInfo `protobuf:"bytes,3,opt,name=info,proto3,oneof"`
}

func (*ImageStatus_Pulled) isImageStatus_Status() {}

func (*ImageStatus_Deleted) isImageStatus_Status() {}

func (*ImageStatus_Info) isImageStatus_Status() {}

func (m *ImageStatus) GetStatus() isImageStatus_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ImageStatus) GetPulled() *ImagePulled {
	if x, ok := m.GetStatus().(*ImageStatus_Pulled); ok {
		return x.Pulled
	}
	return nil
}

func (m *ImageStatus) GetDeleted() *ImageDeleted {
	if x, ok := m.GetStatus().(*ImageStatus_Deleted); ok {
		return x.Deleted
	}
	return nil
}

func (m *ImageStatus) GetInfo() *ImageInfo {
	if x, ok := m.GetStatus().(*ImageStatus_Info); ok {
		return x.Info
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ImageStatus) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ImageStatus_OneofMarshaler, _ImageStatus_OneofUnmarshaler, _ImageStatus_OneofSizer, []interface{}{
		(*ImageStatus_Pulled)(nil),
		(*ImageStatus_Deleted)(nil),
		(*ImageStatus_Info)(nil),
	}
}

func _ImageStatus_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ImageStatus)
	// status
	switch x := m.Status.(type) {
	case *ImageStatus_Pulled:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pulled); err != nil {
			return err
		}
	case *ImageStatus_Deleted:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Deleted); err != nil {
			return err
		}
	case *ImageStatus_Info:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Info); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ImageStatus.Status has unexpected type %T", x)
	}
	return nil
}

func _ImageStatus_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ImageStatus)
	switch tag {
	case 1: // status.pulled
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ImagePulled)
		err := b.DecodeMessage(msg)
		m.Status = &ImageStatus_Pulled{msg}
		return true, err
	case 2: // status.deleted
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ImageDeleted)
		err := b.DecodeMessage(msg)
		m.Status = &ImageStatus_Deleted{msg}
		return true, err
	case 3: // status.info
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ImageInfo)
		err := b.DecodeMessage(msg)
		m.Status = &ImageStatus_Info{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ImageStatus_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ImageStatus)
	// status
	switch x := m.Status.(type) {
	case *ImageStatus_Pulled:
		s := proto.Size(x.Pulled)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ImageStatus_Deleted:
		s := proto.Size(x.Deleted)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ImageStatus_Info:
		s := proto.Size(x.Info)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ImagePulled struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImagePulled) Reset()         { *m = ImagePulled{} }
func (m *ImagePulled) String() string { return proto.CompactTextString(m) }
func (*ImagePulled) ProtoMessage()    {}
func (*ImagePulled) Descriptor() ([]byte, []int) {
	return fileDescriptor_image_bab6e92a9322152a, []int{1}
}
func (m *ImagePulled) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagePulled.Unmarshal(m, b)
}
func (m *ImagePulled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagePulled.Marshal(b, m, deterministic)
}
func (dst *ImagePulled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagePulled.Merge(dst, src)
}
func (m *ImagePulled) XXX_Size() int {
	return xxx_messageInfo_ImagePulled.Size(m)
}
func (m *ImagePulled) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagePulled.DiscardUnknown(m)
}

var xxx_messageInfo_ImagePulled proto.InternalMessageInfo

type ImageDeleted struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageDeleted) Reset()         { *m = ImageDeleted{} }
func (m *ImageDeleted) String() string { return proto.CompactTextString(m) }
func (*ImageDeleted) ProtoMessage()    {}
func (*ImageDeleted) Descriptor() ([]byte, []int) {
	return fileDescriptor_image_bab6e92a9322152a, []int{2}
}
func (m *ImageDeleted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageDeleted.Unmarshal(m, b)
}
func (m *ImageDeleted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageDeleted.Marshal(b, m, deterministic)
}
func (dst *ImageDeleted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageDeleted.Merge(dst, src)
}
func (m *ImageDeleted) XXX_Size() int {
	return xxx_messageInfo_ImageDeleted.Size(m)
}
func (m *ImageDeleted) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageDeleted.DiscardUnknown(m)
}

var xxx_messageInfo_ImageDeleted proto.InternalMessageInfo

type ImageInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageInfo) Reset()         { *m = ImageInfo{} }
func (m *ImageInfo) String() string { return proto.CompactTextString(m) }
func (*ImageInfo) ProtoMessage()    {}
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_image_bab6e92a9322152a, []int{3}
}
func (m *ImageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageInfo.Unmarshal(m, b)
}
func (m *ImageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageInfo.Marshal(b, m, deterministic)
}
func (dst *ImageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageInfo.Merge(dst, src)
}
func (m *ImageInfo) XXX_Size() int {
	return xxx_messageInfo_ImageInfo.Size(m)
}
func (m *ImageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImageInfo proto.InternalMessageInfo

type ImageCmd struct {
	// Types that are valid to be assigned to Cmd:
	//	*ImageCmd_Pull
	//	*ImageCmd_Delete
	//	*ImageCmd_List
	Cmd                  isImageCmd_Cmd `protobuf_oneof:"cmd"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ImageCmd) Reset()         { *m = ImageCmd{} }
func (m *ImageCmd) String() string { return proto.CompactTextString(m) }
func (*ImageCmd) ProtoMessage()    {}
func (*ImageCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_image_bab6e92a9322152a, []int{4}
}
func (m *ImageCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageCmd.Unmarshal(m, b)
}
func (m *ImageCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageCmd.Marshal(b, m, deterministic)
}
func (dst *ImageCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageCmd.Merge(dst, src)
}
func (m *ImageCmd) XXX_Size() int {
	return xxx_messageInfo_ImageCmd.Size(m)
}
func (m *ImageCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageCmd.DiscardUnknown(m)
}

var xxx_messageInfo_ImageCmd proto.InternalMessageInfo

type isImageCmd_Cmd interface {
	isImageCmd_Cmd()
}

type ImageCmd_Pull struct {
	Pull *CmdPullImage `protobuf:"bytes,1,opt,name=pull,proto3,oneof"`
}

type ImageCmd_Delete struct {
	Delete *CmdDeleteImage `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

type ImageCmd_List struct {
	List *CmdListImages `protobuf:"bytes,3,opt,name=list,proto3,oneof"`
}

func (*ImageCmd_Pull) isImageCmd_Cmd() {}

func (*ImageCmd_Delete) isImageCmd_Cmd() {}

func (*ImageCmd_List) isImageCmd_Cmd() {}

func (m *ImageCmd) GetCmd() isImageCmd_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *ImageCmd) GetPull() *CmdPullImage {
	if x, ok := m.GetCmd().(*ImageCmd_Pull); ok {
		return x.Pull
	}
	return nil
}

func (m *ImageCmd) GetDelete() *CmdDeleteImage {
	if x, ok := m.GetCmd().(*ImageCmd_Delete); ok {
		return x.Delete
	}
	return nil
}

func (m *ImageCmd) GetList() *CmdListImages {
	if x, ok := m.GetCmd().(*ImageCmd_List); ok {
		return x.List
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ImageCmd) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ImageCmd_OneofMarshaler, _ImageCmd_OneofUnmarshaler, _ImageCmd_OneofSizer, []interface{}{
		(*ImageCmd_Pull)(nil),
		(*ImageCmd_Delete)(nil),
		(*ImageCmd_List)(nil),
	}
}

func _ImageCmd_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ImageCmd)
	// cmd
	switch x := m.Cmd.(type) {
	case *ImageCmd_Pull:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pull); err != nil {
			return err
		}
	case *ImageCmd_Delete:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Delete); err != nil {
			return err
		}
	case *ImageCmd_List:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.List); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ImageCmd.Cmd has unexpected type %T", x)
	}
	return nil
}

func _ImageCmd_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ImageCmd)
	switch tag {
	case 1: // cmd.pull
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CmdPullImage)
		err := b.DecodeMessage(msg)
		m.Cmd = &ImageCmd_Pull{msg}
		return true, err
	case 2: // cmd.delete
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CmdDeleteImage)
		err := b.DecodeMessage(msg)
		m.Cmd = &ImageCmd_Delete{msg}
		return true, err
	case 3: // cmd.list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CmdListImages)
		err := b.DecodeMessage(msg)
		m.Cmd = &ImageCmd_List{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ImageCmd_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ImageCmd)
	// cmd
	switch x := m.Cmd.(type) {
	case *ImageCmd_Pull:
		s := proto.Size(x.Pull)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ImageCmd_Delete:
		s := proto.Size(x.Delete)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ImageCmd_List:
		s := proto.Size(x.List)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CmdPullImage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CmdPullImage) Reset()         { *m = CmdPullImage{} }
func (m *CmdPullImage) String() string { return proto.CompactTextString(m) }
func (*CmdPullImage) ProtoMessage()    {}
func (*CmdPullImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_image_bab6e92a9322152a, []int{5}
}
func (m *CmdPullImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmdPullImage.Unmarshal(m, b)
}
func (m *CmdPullImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmdPullImage.Marshal(b, m, deterministic)
}
func (dst *CmdPullImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmdPullImage.Merge(dst, src)
}
func (m *CmdPullImage) XXX_Size() int {
	return xxx_messageInfo_CmdPullImage.Size(m)
}
func (m *CmdPullImage) XXX_DiscardUnknown() {
	xxx_messageInfo_CmdPullImage.DiscardUnknown(m)
}

var xxx_messageInfo_CmdPullImage proto.InternalMessageInfo

type CmdDeleteImage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CmdDeleteImage) Reset()         { *m = CmdDeleteImage{} }
func (m *CmdDeleteImage) String() string { return proto.CompactTextString(m) }
func (*CmdDeleteImage) ProtoMessage()    {}
func (*CmdDeleteImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_image_bab6e92a9322152a, []int{6}
}
func (m *CmdDeleteImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmdDeleteImage.Unmarshal(m, b)
}
func (m *CmdDeleteImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmdDeleteImage.Marshal(b, m, deterministic)
}
func (dst *CmdDeleteImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmdDeleteImage.Merge(dst, src)
}
func (m *CmdDeleteImage) XXX_Size() int {
	return xxx_messageInfo_CmdDeleteImage.Size(m)
}
func (m *CmdDeleteImage) XXX_DiscardUnknown() {
	xxx_messageInfo_CmdDeleteImage.DiscardUnknown(m)
}

var xxx_messageInfo_CmdDeleteImage proto.InternalMessageInfo

type CmdListImages struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CmdListImages) Reset()         { *m = CmdListImages{} }
func (m *CmdListImages) String() string { return proto.CompactTextString(m) }
func (*CmdListImages) ProtoMessage()    {}
func (*CmdListImages) Descriptor() ([]byte, []int) {
	return fileDescriptor_image_bab6e92a9322152a, []int{7}
}
func (m *CmdListImages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmdListImages.Unmarshal(m, b)
}
func (m *CmdListImages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmdListImages.Marshal(b, m, deterministic)
}
func (dst *CmdListImages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmdListImages.Merge(dst, src)
}
func (m *CmdListImages) XXX_Size() int {
	return xxx_messageInfo_CmdListImages.Size(m)
}
func (m *CmdListImages) XXX_DiscardUnknown() {
	xxx_messageInfo_CmdListImages.DiscardUnknown(m)
}

var xxx_messageInfo_CmdListImages proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ImageStatus)(nil), "service.ImageStatus")
	proto.RegisterType((*ImagePulled)(nil), "service.ImagePulled")
	proto.RegisterType((*ImageDeleted)(nil), "service.ImageDeleted")
	proto.RegisterType((*ImageInfo)(nil), "service.ImageInfo")
	proto.RegisterType((*ImageCmd)(nil), "service.ImageCmd")
	proto.RegisterType((*CmdPullImage)(nil), "service.CmdPullImage")
	proto.RegisterType((*CmdDeleteImage)(nil), "service.CmdDeleteImage")
	proto.RegisterType((*CmdListImages)(nil), "service.CmdListImages")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImageClient is the client API for Image service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImageClient interface {
	SyncDeviceImages(ctx context.Context, opts ...grpc.CallOption) (Image_SyncDeviceImagesClient, error)
}

type imageClient struct {
	cc *grpc.ClientConn
}

func NewImageClient(cc *grpc.ClientConn) ImageClient {
	return &imageClient{cc}
}

func (c *imageClient) SyncDeviceImages(ctx context.Context, opts ...grpc.CallOption) (Image_SyncDeviceImagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Image_serviceDesc.Streams[0], "/service.Image/SyncDeviceImages", opts...)
	if err != nil {
		return nil, err
	}
	x := &imageSyncDeviceImagesClient{stream}
	return x, nil
}

type Image_SyncDeviceImagesClient interface {
	Send(*ImageStatus) error
	Recv() (*ImageCmd, error)
	grpc.ClientStream
}

type imageSyncDeviceImagesClient struct {
	grpc.ClientStream
}

func (x *imageSyncDeviceImagesClient) Send(m *ImageStatus) error {
	return x.ClientStream.SendMsg(m)
}

func (x *imageSyncDeviceImagesClient) Recv() (*ImageCmd, error) {
	m := new(ImageCmd)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ImageServer is the server API for Image service.
type ImageServer interface {
	SyncDeviceImages(Image_SyncDeviceImagesServer) error
}

func RegisterImageServer(s *grpc.Server, srv ImageServer) {
	s.RegisterService(&_Image_serviceDesc, srv)
}

func _Image_SyncDeviceImages_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ImageServer).SyncDeviceImages(&imageSyncDeviceImagesServer{stream})
}

type Image_SyncDeviceImagesServer interface {
	Send(*ImageCmd) error
	Recv() (*ImageStatus, error)
	grpc.ServerStream
}

type imageSyncDeviceImagesServer struct {
	grpc.ServerStream
}

func (x *imageSyncDeviceImagesServer) Send(m *ImageCmd) error {
	return x.ServerStream.SendMsg(m)
}

func (x *imageSyncDeviceImagesServer) Recv() (*ImageStatus, error) {
	m := new(ImageStatus)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Image_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.Image",
	HandlerType: (*ImageServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SyncDeviceImages",
			Handler:       _Image_SyncDeviceImages_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "image.proto",
}

func init() { proto.RegisterFile("image.proto", fileDescriptor_image_bab6e92a9322152a) }

var fileDescriptor_image_bab6e92a9322152a = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xcd, 0x4e, 0xc2, 0x40,
	0x14, 0x85, 0x19, 0x29, 0x05, 0x6f, 0x05, 0xf1, 0xc6, 0x9f, 0xc6, 0x95, 0x99, 0x55, 0x13, 0x4d,
	0x23, 0xf8, 0x00, 0x26, 0x94, 0x45, 0x49, 0x5c, 0x98, 0xf2, 0x04, 0xd8, 0x19, 0x4c, 0x93, 0xfe,
	0x10, 0x66, 0x30, 0xf1, 0x69, 0xdc, 0xf8, 0xa0, 0x66, 0xee, 0x0c, 0xda, 0xba, 0x6b, 0x7b, 0xbe,
	0x73, 0xcf, 0xb9, 0xb9, 0x85, 0xa0, 0xa8, 0x36, 0xef, 0x32, 0xde, 0xed, 0x1b, 0xdd, 0xe0, 0x50,
	0xc9, 0xfd, 0x47, 0x91, 0x4b, 0xfe, 0xcd, 0x20, 0x58, 0x19, 0x61, 0xad, 0x37, 0xfa, 0xa0, 0x30,
	0x06, 0x7f, 0x77, 0x28, 0x4b, 0x29, 0x42, 0x76, 0xc7, 0xa2, 0x60, 0x7e, 0x19, 0x3b, 0x32, 0x26,
	0xea, 0x95, 0xb4, 0xb4, 0x97, 0x39, 0x0a, 0x67, 0x30, 0x14, 0xb2, 0x94, 0x5a, 0x8a, 0xf0, 0x84,
	0x0c, 0x57, 0x5d, 0xc3, 0xd2, 0x8a, 0x69, 0x2f, 0x3b, 0x72, 0x18, 0x81, 0x57, 0xd4, 0xdb, 0x26,
	0xec, 0x13, 0x8f, 0x5d, 0x7e, 0x55, 0x6f, 0x9b, 0xb4, 0x97, 0x11, 0xb1, 0x18, 0x81, 0xaf, 0xa8,
	0x16, 0x1f, 0xbb, 0x96, 0x36, 0x9f, 0x4f, 0xe0, 0xac, 0x3d, 0x9d, 0x07, 0x70, 0xfa, 0xeb, 0xe6,
	0x5f, 0x0c, 0x46, 0xf4, 0x96, 0x54, 0x02, 0xef, 0xc1, 0x33, 0x4d, 0xdd, 0x36, 0x7f, 0xe5, 0x92,
	0x4a, 0x98, 0x59, 0xc4, 0x99, 0x3c, 0x03, 0xe1, 0x0c, 0x7c, 0x5b, 0xd2, 0xed, 0x72, 0xd3, 0xc6,
	0x6d, 0xd6, 0xd1, 0xe0, 0x40, 0x7c, 0x00, 0xaf, 0x2c, 0x94, 0x76, 0xcb, 0x5c, 0xb7, 0x0d, 0x2f,
	0x85, 0xd2, 0x84, 0x2b, 0x13, 0x60, 0xa8, 0xc5, 0x00, 0xfa, 0x79, 0x45, 0xf5, 0xdb, 0xf9, 0x7c,
	0x0a, 0x93, 0x6e, 0x00, 0x3f, 0x87, 0x71, 0x67, 0xc2, 0x3c, 0x85, 0x01, 0x3d, 0xe1, 0x33, 0x4c,
	0xd7, 0x9f, 0x75, 0xbe, 0x94, 0x26, 0xc6, 0x8a, 0xf8, 0xef, 0x48, 0xf6, 0x94, 0xb7, 0x17, 0xdd,
	0xaf, 0x49, 0x25, 0x22, 0xf6, 0xc8, 0xde, 0x7c, 0xfa, 0x03, 0x9e, 0x7e, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x64, 0x04, 0x16, 0x15, 0x10, 0x02, 0x00, 0x00,
}
