syntax = "proto3";

package connectivity;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.messagename_all) = true;

message NodeCmd {
    enum NodeAction {
        GetInfoAll = 0;
        GetSystemInfo = 1;
        GetResources = 2;
        GetConditions = 3;
    }

    NodeAction action = 1;
}

message ImageCmd {
    enum ImageAction {
        ListImages = 0;
    }

    ImageAction action = 1;
}

message PodCmd {
    enum PodAction {
        // We do not have Pod Update action, and we will always
        // recreate the pod when a update required,
        // also, any pod update action will be resolved in aranya to generate
        // Create and Delete action for remote device.
        //
        // This behavior can keep this project simple and easy to extend.
    
        // Create a new pod in device
        CreatePod = 0;
        // Delete a existing pod in device
        DeletePod = 1;
        // List all managed pod in device
        ListPods = 3;
    
        // Execute commands in existing container
        Exec = 11;
        // Attach to existing container
        Attach = 12;
        // Get container/node log
        Log = 13;
        // Port forward in pod
        PortForward = 14;
        // user input or application data to
        // usually this action happens in Exec, Attach, PortForward session
        Input = 15;
        // user tty resize
        // usually this action happens in Exec, Attach session when tty is enabled
        ResizeTty = 16;
    }

    // action type
    PodAction action = 1;

    // options for action
    oneof options {
        // used by create or update
        CreateOptions create_options = 11;
        // used by delete
        DeleteOptions delete_options = 12;
        // used by list
        ListOptions list_options = 13;
        // used by log
        LogOptions log_options = 14;
        // used by exec and attach
        ExecOptions exec_options = 15;
        // used by port forward
        PortForwardOptions port_forward_options = 16;
        // used in exec, attach, port_forward session
        InputOptions input_options = 17;
        // used in exec, attach session
        TtyResizeOptions resize_options = 18;
    }
}

message NamedData {
    map<string, bytes> data = 1;
}

message ContainerPort {
    string protocol = 1;
    int32 host_port = 2;
    int32 container_port = 3;
    string host_ip = 4;
}

message VolumeMount {
    string mount_path = 1;
    string volume_sub_path = 2;
    bool read_only = 3;
    string type = 4;
    repeated string options = 5;
}

message ContainerSpec {
    // container image name to pull
    string image = 1;
    string image_pull_policy = 2;

    // Command (ENTRYPOINT in Dockerfile)
    repeated string command = 3;
    // Args (CMD in Dockerfile)
    repeated string args = 4;

    string working_dir = 5;
    bool stdin = 6;
    bool tty = 7;

    // key: port name
    // value: port map and spec
    map<string, ContainerPort> ports = 11;
    // key: env key
    // value: env value
    map<string, string> envs = 12;
    // key: volume name
    // value: volume mount spec
    map<string, VolumeMount> volume_mounts = 13;

    //
    // security opts
    //
    bool privileged = 21;
    bool allow_new_privileges = 22;
}

message CreateOptions {
    // kubernetes pod uid
    string pod_uid = 1;
    string namespace = 2;
    string name = 3;

    // key: container name in the pod
    // value: container creation spec
    map<string, ContainerSpec> containers = 11;

    // key: image name
    // value: bytes of criRuntime.AuthConfig
    // used to pull private images
    map<string, bytes> image_pull_auth_config = 12;

    //
    // Volumes
    //

    // key: volume name
    // value: host path
    map<string, string> host_volumes = 21;
    // key: volume name
    // value: data from {ConfigMap, Secret}
    // used to populate file(s) in container(s)
    map<string, NamedData> volume_data = 22;

    // other options
    bool host_ipc = 31;
    bool host_network = 32;
    bool host_pid = 33;
    string hostname = 34;
}

message DeleteOptions {
    // pods to delete
    string pod_uid = 1;

    int64 grace_time = 10;
}

message ListOptions {
    // pod namespace
    string namespace = 1;
    // pod name
    string name = 2;
    // show all pods available
    bool all = 3;
}

message LogOptions {
    string pod_uid = 1;

    oneof options {
        // protobuf bytes of corev1.LogOptions
        bytes options_v1 = 10;
    }
}

message ExecOptions {
    string pod_uid = 1;

    oneof options {
        // protobuf bytes of corev1.ExecOptions
        bytes options_v1 = 10;
    }
}

message PortForwardOptions {
    string pod_uid = 1;

    oneof options {
        // protobuf bytes of corev1.PortForwardOptions
        bytes options_v1 = 10;
    }
}

message InputOptions {
    bytes data = 1;
}

message TtyResizeOptions {
    uint32 cols = 1;
    uint32 rows = 2;
}
