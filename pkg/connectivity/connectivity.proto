/*
Copyright 2019 The arhat.dev Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package connectivity;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

import "cmd_detail.proto";
import "msg_detail.proto";

// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;
// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;
// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;
// Enable generation of XXX_MessageName methods for grpc-go/status.
option (gogoproto.messagename_all) = true;

service Connectivity {
    rpc Sync (stream Msg) returns (stream Cmd);
}

message Msg {
    uint64 session_id = 1;
    bool completed = 2;

    oneof msg {
        // error happened
        Error error = 11;

        // io data
        Data data = 12;

        // node status
        NodeStatus node_status = 13;

        // pod status
        PodStatus pod_status = 14;
        // pod status list (cmd pod list)
        PodStatusList pod_status_list = 15;
    }
}

message Cmd {
    uint64 session_id = 1;

    oneof cmd {
        NodeCmd node = 11;
        PodCmd pod = 12;
        // tell agent to close this session
        uint64 close_session = 13;
        
        // device rejected by server, and tell the reason why
        // device should close its connection
        RejectCmd reject = 14;
    }
}
